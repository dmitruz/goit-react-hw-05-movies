{"version":3,"file":"static/js/79.c91d680d.chunk.js","mappings":"mOAEaA,E,OAAUC,GAAAA,GAAJ,oE,SCIJ,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQE,OANFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GACzBJ,EAAaI,EAAIC,cAElB,KAGC,iCACA,SAACV,EAAD,6BACAI,IAAa,SAAC,IAAD,CAAWO,KAAMP,S,oFChBvBQ,E,OAAaX,GAAAA,GAAJ,gD,SCEP,SAASY,EAAT,GAA8B,IAATF,EAAQ,EAARA,KAC5BG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGD,IAAS,IACRA,EAAKK,KAAI,SAAAC,GAAK,OACZ,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMR,IAHnB,SAMGG,EAAMM,KAAON,EAAMM,KAAON,EAAMO,SAP3BP,EAAMG,W,oLCTpBK,EAAW,+BACXC,EAAU,mCAAhB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAAS7B,IACb,OAAOoB,EAAuB,GAAD,OAAIF,EAAJ,qCAAyCC,IAGlE,SAASW,EAAiBC,GAC7B,OAAOX,EAAuB,GAAD,OAC1BF,EAD0B,iCACOC,EADP,4DACkEY,IAI5F,SAASC,EAAkBC,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,oBACYd,EADZ,oBAK1B,SAASe,EAAkBD,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,4BACoBd,EADpB,oBAM1B,SAASgB,EAAkBF,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,4BACoBd,EADpB","sources":["components/HomePage/HomePage.styled.jsx","components/HomePage/HomePage.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Tittle =  styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 20px;\r\n`;","import { useEffect, useState } from 'react';\r\nimport { fetchTrendingMovies } from '../../services/api';\r\nimport MovieList from '../MoviesList/MoviesList';\r\nimport {Tittle} from './HomePage.styled'\r\n\r\n\r\nexport default function HomePage() {\r\n  const [movieList, setMovieList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchTrendingMovies().then(res => {\r\n      setMovieList(res.results);\r\n    });\r\n  }, []);\r\n\r\n    return (\r\n      <>\r\n      <Tittle>Trending today</Tittle>\r\n     {movieList && <MovieList list={movieList} />}\r\n      </>  \r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const ListMovie =  styled.ul`\r\n  font-size: 20px;\r\n  \r\n`;","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { ListMovie } from './MoviesList.styled';\r\n\r\nexport default function MovieList({ list }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ListMovie >\r\n      {list !== [] &&\r\n        list.map(movie => (\r\n          <li  key={movie.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: { from: location },\r\n              }}\r\n            >\r\n              {movie.name ? movie.name : movie.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ListMovie>\r\n  );\r\n}\r\n\r\nMovieList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n};","\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '86df994fc1da9fa91c8ed05c97ff5a2c';\r\n\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n   return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n}\r\n  \r\nexport function fetchSearchMovie(searchQuery) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieCredits(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\n\r\nexport function fetchMovieReviews(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  );\r\n}"],"names":["Tittle","styled","HomePage","useState","movieList","setMovieList","useEffect","fetchTrendingMovies","then","res","results","list","ListMovie","MovieList","location","useLocation","map","movie","to","pathname","id","state","from","name","title","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchSearchMovie","searchQuery","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}