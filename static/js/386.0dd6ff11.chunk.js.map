{"version":3,"file":"static/js/386.0dd6ff11.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const GoToBackBtn =  styled.button`\r\n  margin-bottom: 10px;\r\n  margin-left:5px;\r\n  padding: 10px;\r\n   cursor: pointer;\r\n`;\r\n\r\nexport const Container =  styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContainerInfo =  styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ContainerNav = styled.nav`\r\n margin-top: 15px;\r\n border-bottom : 2px solid #C0C0C0;\r\n border-top : 2px solid #C0C0C0;\r\n padding: 20px;\r\n`;\r\n\r\n\r\nexport const Link = styled(NavLink)`\r\n  margin: 15px 20px;\r\n  display: flex;\r\n  color: #000000;\r\n  &.active {\r\n    color: #FF0000;\r\n  }\r\n`;\r\nexport const TittleNav = styled.div`\r\nfont-size: 20px;\r\n`;","import {lazy, useEffect, useState,  Suspense } from \"react\";\r\nimport { useParams, useRouteMatch, Route,  useLocation, useHistory } from \"react-router-dom\";\r\nimport { fetchMovieDetails } from '../../services/api';\r\nimport { GoToBackBtn } from './MovieDetails.styled';\r\nimport {Container, ContainerInfo, ContainerNav, Link,  TittleNav } from './MovieDetails.styled'\r\n\r\n\r\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: \"Cast\" */),);\r\nconst Reviews = lazy(() => import('../Reviews/Reviews' /* webpackChunkName: \"Reviews\" */),);\r\n\r\nexport default function MovieDetailsPage() {\r\n    const { movieId } = useParams();\r\n    const { path } = useRouteMatch();\r\n    const [movie, setMovie] = useState(null);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        fetchMovieDetails(movieId).then(setMovie)\r\n    }, [movieId])\r\n\r\n    const onGoBack = () => {\r\n        history.push(location?.state?.from ?? '/movies');\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {movie && <>                \r\n                <GoToBackBtn type=\"button\" onClick={onGoBack} >Go back</GoToBackBtn>\r\n                <Container>\r\n                 <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title} width=\"300\" />\r\n                \r\n                  <ContainerInfo>\r\n                    <h2>{movie.title} </h2>\r\n                    <p><span >Release date: </span>{movie.release_date}</p>\r\n                    <p><span >Popularity: </span>{movie.popularity}</p>\r\n                    <p><span >Overview: </span>{movie.overview}</p>\r\n                    <p><span >Genres: </span></p>\r\n                    <ul >\r\n                        {movie.genres.map(genre =>\r\n                            <li key={genre.id} >{genre.name}</li>)}\r\n                    </ul>  \r\n                </ContainerInfo>\r\n             </Container>   \r\n            </>\r\n            }\r\n            <ContainerNav >\r\n              <TittleNav>Additional information</TittleNav> \r\n                    <Link\r\n              \r\n              to={`/movies/${movieId}/cast`}\r\n              state={{\r\n                from: location.from?.location,\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n            <Link\r\n                  \r\n              to={`/movies/${movieId}/reviews`}\r\n              state={{\r\n                from: location.from,\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n                \r\n            </ContainerNav>\r\n                \r\n        <Suspense fallback={<h1>LOADING...</h1>}>\r\n         \r\n             <Route path={`${path}/cast`}>\r\n                <Cast /> \r\n            </Route>\r\n            <Route path={`${path}/reviews`}>\r\n                <Reviews /> \r\n            </Route>   \r\n            </Suspense>\r\n        </>\r\n    )\r\n}","\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '86df994fc1da9fa91c8ed05c97ff5a2c';\r\n\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n   return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n}\r\n  \r\nexport function fetchSearchMovie(searchQuery) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieCredits(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\n\r\nexport function fetchMovieReviews(movie_id) {\r\n    return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  );\r\n}"],"names":["GoToBackBtn","styled","Container","ContainerInfo","ContainerNav","Link","NavLink","TittleNav","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","path","useRouteMatch","useState","movie","setMovie","location","useLocation","history","useHistory","useEffect","fetchMovieDetails","then","type","onClick","push","state","from","src","poster_path","alt","title","width","release_date","popularity","overview","genres","map","genre","name","id","to","Suspense","fallback","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}